[{"D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\index.tsx":"1","D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\reportWebVitals.js":"2","D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Videos\\VideoList.tsx":"3","D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Navbar\\Navbar.tsx":"4","D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Videos\\VideoForm.tsx":"5","D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Videos\\VideoService.ts":"6","D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Videos\\VideoItem.tsx":"7"},{"size":1235,"mtime":1655079810098,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1655079810099,"results":"10","hashOfConfig":"9"},{"size":987,"mtime":1655079810098,"results":"11","hashOfConfig":"9"},{"size":848,"mtime":1655079810097,"results":"12","hashOfConfig":"9"},{"size":3183,"mtime":1655079810097,"results":"13","hashOfConfig":"9"},{"size":675,"mtime":1655079810098,"results":"14","hashOfConfig":"9"},{"size":1585,"mtime":1655079810098,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d5qbzd",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\index.tsx",[],"D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\reportWebVitals.js",[],"D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Videos\\VideoList.tsx",[],"D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Navbar\\Navbar.tsx",[],"D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Videos\\VideoForm.tsx",["32"],"import React, { ChangeEvent, FormEvent, useState, useEffect } from \"react\";\r\nimport { Video } from \"./Video\";\r\nimport { toast } from \"react-toastify\";\r\nimport * as VideoService from \"./VideoService\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\ntype InputChange = ChangeEvent<HTMLInputElement | HTMLTextAreaElement>;\r\n\r\ninterface Params {\r\n  id: string;\r\n}\r\n\r\nconst VideoForm = () => {\r\n  const history = useHistory();\r\n  const params = useParams<Params>();\r\n  const initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    url: \"\",\r\n  };\r\n  const [video, setvideo] = useState<Video>(initialState);\r\n\r\n  const handleInputChange = (e: InputChange) => {\r\n    setvideo({ ...video, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmint = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (!params.id) {\r\n      await VideoService.createVideo(video);\r\n      toast.success(\"Video guardado correctamente\");\r\n      setvideo(initialState);\r\n    } else {\r\n      await VideoService.updateVideo(params.id, video);\r\n      toast.success(\"Video actualizado correctamente\");\r\n      history.push('/')\r\n    }\r\n    \r\n  };\r\n  const getVideo = async (id: string) => {\r\n    const res = await VideoService.getVideo(id);\r\n    const { title, description, url } = res.data;\r\n    setvideo({ title, description, url });\r\n  };\r\n  useEffect(() => {\r\n    if (params.id) getVideo(params.id);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4 offset-md-4\">\r\n        <div className=\"card\">\r\n          <div className=\"card-title text-center\">\r\n            <h4>Nuevo video</h4>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={handleSubmint}>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  placeholder=\"Título del video\"\r\n                  className=\"form-control\"\r\n                  onChange={handleInputChange}\r\n                  value={video.title}\r\n                  autoFocus\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"url\"\r\n                  name=\"url\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"https://ejemplo.com\"\r\n                  value={video.url}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  name=\"description\"\r\n                  rows={3}\r\n                  className=\"form-control\"\r\n                  placeholder=\"Descripción del video\"\r\n                  onChange={handleInputChange}\r\n                  value={video.description}\r\n                ></textarea>\r\n              </div>\r\n              {params.id ? (\r\n                <button className=\"btn btn-primary\">Actualizar</button>\r\n              ) : (\r\n                <button className=\"btn btn-primary\">Guardar</button>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoForm;\r\n","D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Videos\\VideoService.ts",[],"D:\\Projects\\FREE\\MERN\\stack-mern-typescript-frontend\\src\\components\\Videos\\VideoItem.tsx",["33"],"import React from \"react\";\r\nimport { Video } from \"./Video\";\r\nimport ReactPlayer from \"react-player\";\r\nimport \"./VideoItem.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as VideoService from \"./VideoService\";\r\nimport VideoList from \"./VideoList\";\r\ninterface Props {\r\n  video: Video;\r\n  loadVideos: () => void;\r\n}\r\n\r\nfunction VideoItem({ video, loadVideos }: Props) {\r\n  const history = useHistory();\r\n  const handleDelete = async (id: string) => {\r\n    if (window.confirm(\"¿Está seguro que desea eliminar el video?\")) {\r\n      await VideoService.deleteVideo(id);\r\n      loadVideos();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"col-md-4\">\r\n      <div className=\"card video-card\">\r\n        <div className=\"card-title text-center\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <h3>{video.title}</h3>\r\n            <span\r\n              className=\" btn btn-danger\"\r\n              onClick={() =>\r\n                video._id\r\n                  ? handleDelete(video._id)\r\n                  : console.error(\"nothing to delete\")\r\n              }\r\n            >\r\n              X\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"card-body\"\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => history.push(`/update/${video._id}`)}\r\n        >\r\n          <p>{video.description}</p>\r\n          <div className=\"embed-responsive embed-responsive-16by9\">\r\n            <ReactPlayer url={video.url} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VideoItem;\r\n",{"ruleId":"34","severity":1,"message":"35","line":45,"column":6,"nodeType":"36","endLine":45,"endColumn":8,"suggestions":"37"},{"ruleId":"38","severity":1,"message":"39","line":7,"column":8,"nodeType":"40","messageId":"41","endLine":7,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.","ArrayExpression",["42"],"@typescript-eslint/no-unused-vars","'VideoList' is defined but never used.","Identifier","unusedVar",{"desc":"43","fix":"44"},"Update the dependencies array to be: [params.id]",{"range":"45","text":"46"},[1420,1422],"[params.id]"]